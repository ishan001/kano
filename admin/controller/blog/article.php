<?phpclass ControllerBlogArticle extends Controller {	private $error = array();   	public function index() {		$this->load->language('blog/article');		$this->document->setTitle($this->language->get('heading_title'));		$this->load->model('blog/article');		$this->load->model('blog/ocblog');				/* Add Image field */		$this->model_blog_ocblog->updateImageToTable();		/* Add Author field */		$this->model_blog_ocblog->updateAuthorToTable();		$this->getList();	}	public function add() {		$this->load->language('blog/article');		$this->document->setTitle($this->language->get('heading_title'));		$this->load->model('blog/article');		if (($this->request->server['REQUEST_METHOD'] == 'POST') && $this->validateForm()) {			$this->model_blog_article->addArticle($this->request->post);			$this->session->data['success'] = $this->language->get('text_success');			$url = '';			if (isset($this->request->get['filter_name'])) {				$url .= '&filter_name=' . urlencode(html_entity_decode($this->request->get['filter_name'], ENT_QUOTES, 'UTF-8'));			}			if (isset($this->request->get['filter_status'])) {				$url .= '&filter_status=' . $this->request->get['filter_status'];			}			if (isset($this->request->get['sort'])) {				$url .= '&sort=' . $this->request->get['sort'];			}			if (isset($this->request->get['order'])) {				$url .= '&order=' . $this->request->get['order'];			}			if (isset($this->request->get['page'])) {				$url .= '&page=' . $this->request->get['page'];			}			$this->response->redirect($this->url->link('blog/article', 'token=' . $this->session->data['token'] . $url, true));		}		$this->getForm();	}	public function edit() {		$this->load->language('blog/article');		$this->document->setTitle($this->language->get('heading_title'));		$this->load->model('blog/article');		if (($this->request->server['REQUEST_METHOD'] == 'POST') && $this->validateForm()) {			$this->model_blog_article->editArticle($this->request->get['article_id'], $this->request->post);			$this->session->data['success'] = $this->language->get('text_success');			$url = '';			if (isset($this->request->get['filter_name'])) {				$url .= '&filter_name=' . urlencode(html_entity_decode($this->request->get['filter_name'], ENT_QUOTES, 'UTF-8'));			}			if (isset($this->request->get['filter_status'])) {				$url .= '&filter_status=' . $this->request->get['filter_status'];			}			if (isset($this->request->get['sort'])) {				$url .= '&sort=' . $this->request->get['sort'];			}			if (isset($this->request->get['order'])) {				$url .= '&order=' . $this->request->get['order'];			}			if (isset($this->request->get['page'])) {				$url .= '&page=' . $this->request->get['page'];			}			$this->response->redirect($this->url->link('blog/article', 'token=' . $this->session->data['token'] . $url, true));		}		$this->getForm();	}	public function delete() {		$this->load->language('blog/article');		$this->document->setTitle($this->language->get('heading_title'));		$this->load->model('blog/article');		if (isset($this->request->post['selected']) && $this->validateDelete()) {			foreach ($this->request->post['selected'] as $article_id) {				$this->model_blog_article->deleteArticle($article_id);			}			$this->session->data['success'] = $this->language->get('text_success');			$url = '';			if (isset($this->request->get['filter_name'])) {				$url .= '&filter_name=' . urlencode(html_entity_decode($this->request->get['filter_name'], ENT_QUOTES, 'UTF-8'));			}			if (isset($this->request->get['filter_status'])) {				$url .= '&filter_status=' . $this->request->get['filter_status'];			}			if (isset($this->request->get['sort'])) {				$url .= '&sort=' . $this->request->get['sort'];			}			if (isset($this->request->get['order'])) {				$url .= '&order=' . $this->request->get['order'];			}			if (isset($this->request->get['page'])) {				$url .= '&page=' . $this->request->get['page'];			}			$this->response->redirect($this->url->link('blog/article', 'token=' . $this->session->data['token'] . $url, true));		}		$this->getList();	}	public function copy() {		$this->load->language('blog/article');		$this->document->setTitle($this->language->get('heading_title'));		$this->load->model('blog/article');		if (isset($this->request->post['selected']) && $this->validateCopy()) {			foreach ($this->request->post['selected'] as $article_id) {				$this->model_blog_article->copyArticle($article_id);			}			$this->session->data['success'] = $this->language->get('text_success');			$url = '';			if (isset($this->request->get['filter_name'])) {				$url .= '&filter_name=' . urlencode(html_entity_decode($this->request->get['filter_name'], ENT_QUOTES, 'UTF-8'));			}			if (isset($this->request->get['filter_status'])) {				$url .= '&filter_status=' . $this->request->get['filter_status'];			}			if (isset($this->request->get['sort'])) {				$url .= '&sort=' . $this->request->get['sort'];			}			if (isset($this->request->get['order'])) {				$url .= '&order=' . $this->request->get['order'];			}			if (isset($this->request->get['page'])) {				$url .= '&page=' . $this->request->get['page'];			}			$this->response->redirect($this->url->link('blog/article', 'token=' . $this->session->data['token'] . $url, true));		}		$this->getList();	}	protected function getList() {		if (isset($this->request->get['filter_name'])) {			$filter_name = $this->request->get['filter_name'];		} else {			$filter_name = null;		}		if (isset($this->request->get['filter_status'])) {			$filter_status = $this->request->get['filter_status'];		} else {			$filter_status = null;		}		if (isset($this->request->get['sort'])) {			$sort = $this->request->get['sort'];		} else {			$sort = 'pd.name';		}		if (isset($this->request->get['order'])) {			$order = $this->request->get['order'];		} else {			$order = 'ASC';		}		if (isset($this->request->get['page'])) {			$page = $this->request->get['page'];		} else {			$page = 1;		}		$url = '';		if (isset($this->request->get['filter_name'])) {			$url .= '&filter_name=' . urlencode(html_entity_decode($this->request->get['filter_name'], ENT_QUOTES, 'UTF-8'));		}		if (isset($this->request->get['filter_status'])) {			$url .= '&filter_status=' . $this->request->get['filter_status'];		}		if (isset($this->request->get['sort'])) {			$url .= '&sort=' . $this->request->get['sort'];		}		if (isset($this->request->get['order'])) {			$url .= '&order=' . $this->request->get['order'];		}		if (isset($this->request->get['page'])) {			$url .= '&page=' . $this->request->get['page'];		}		$data['breadcrumbs'] = array();		$data['breadcrumbs'][] = array(			'text' => $this->language->get('text_home'),			'href' => $this->url->link('common/dashboard', 'token=' . $this->session->data['token'], true)		);		$data['breadcrumbs'][] = array(			'text' => $this->language->get('heading_title'),			'href' => $this->url->link('blog/article', 'token=' . $this->session->data['token'] . $url, true)		);		$data['add'] = $this->url->link('blog/article/add', 'token=' . $this->session->data['token'] . $url, true);		$data['copy'] = $this->url->link('blog/article/copy', 'token=' . $this->session->data['token'] . $url, true);		$data['delete'] = $this->url->link('blog/article/delete', 'token=' . $this->session->data['token'] . $url, true);		$data['articles'] = array();		$filter_data = array(			'filter_name'	  => $filter_name,			'filter_status'   => $filter_status,			'sort'            => $sort,			'order'           => $order,			'start'           => ($page - 1) * $this->config->get('config_limit_admin'),			'limit'           => $this->config->get('config_limit_admin')		);		$article_total = $this->model_blog_article->getTotalArticles($filter_data);		$results = $this->model_blog_article->getArticles($filter_data);		foreach ($results as $result) {			$data['articles'][] = array(				'article_id' => $result['article_id'],				'name'       => $result['name'],				'author'	 => $result['author'],				'status'     => ($result['status']) ? $this->language->get('text_enabled') : $this->language->get('text_disabled'),				'edit'       => $this->url->link('blog/article/edit', 'token=' . $this->session->data['token'] . '&article_id=' . $result['article_id'] . $url, true)			);		}		$data['heading_title'] = $this->language->get('heading_title');				$data['text_list'] = $this->language->get('text_list');		$data['text_enabled'] = $this->language->get('text_enabled');		$data['text_disabled'] = $this->language->get('text_disabled');		$data['text_no_results'] = $this->language->get('text_no_results');		$data['text_confirm'] = $this->language->get('text_confirm');		$data['column_name'] = $this->language->get('column_name');		$data['column_status'] = $this->language->get('column_status');		$data['column_action'] = $this->language->get('column_action');		$data['column_author'] = $this->language->get('column_author'); // Author		$data['entry_name'] = $this->language->get('entry_name');		$data['entry_quantity'] = $this->language->get('entry_quantity');		$data['entry_status'] = $this->language->get('entry_status');		$data['button_copy'] = $this->language->get('button_copy');		$data['button_add'] = $this->language->get('button_add');		$data['button_edit'] = $this->language->get('button_edit');		$data['button_delete'] = $this->language->get('button_delete');		$data['button_filter'] = $this->language->get('button_filter');		$data['token'] = $this->session->data['token'];		if (isset($this->error['warning'])) {			$data['error_warning'] = $this->error['warning'];		} else {			$data['error_warning'] = '';		}		if (isset($this->session->data['success'])) {			$data['success'] = $this->session->data['success'];			unset($this->session->data['success']);		} else {			$data['success'] = '';		}		if (isset($this->request->post['selected'])) {			$data['selected'] = (array)$this->request->post['selected'];		} else {			$data['selected'] = array();		}		$url = '';		if (isset($this->request->get['filter_name'])) {			$url .= '&filter_name=' . urlencode(html_entity_decode($this->request->get['filter_name'], ENT_QUOTES, 'UTF-8'));		}		if (isset($this->request->get['filter_status'])) {			$url .= '&filter_status=' . $this->request->get['filter_status'];		}		if ($order == 'ASC') {			$url .= '&order=DESC';		} else {			$url .= '&order=ASC';		}		if (isset($this->request->get['page'])) {			$url .= '&page=' . $this->request->get['page'];		}		$data['sort_name'] = $this->url->link('blog/article', 'token=' . $this->session->data['token'] . '&sort=pd.name' . $url, true);		$data['sort_status'] = $this->url->link('blog/article', 'token=' . $this->session->data['token'] . '&sort=p.status' . $url, true);		$data['sort_order'] = $this->url->link('blog/article', 'token=' . $this->session->data['token'] . '&sort=p.sort_order' . $url, true);		$url = '';		if (isset($this->request->get['filter_name'])) {			$url .= '&filter_name=' . urlencode(html_entity_decode($this->request->get['filter_name'], ENT_QUOTES, 'UTF-8'));		}		if (isset($this->request->get['filter_status'])) {			$url .= '&filter_status=' . $this->request->get['filter_status'];		}		if (isset($this->request->get['sort'])) {			$url .= '&sort=' . $this->request->get['sort'];		}		if (isset($this->request->get['order'])) {			$url .= '&order=' . $this->request->get['order'];		}		$pagination = new Pagination();		$pagination->total = $article_total;		$pagination->page = $page;		$pagination->limit = $this->config->get('config_limit_admin');		$pagination->url = $this->url->link('blog/article', 'token=' . $this->session->data['token'] . $url . '&page={page}', true);		$data['pagination'] = $pagination->render();		$data['results'] = sprintf($this->language->get('text_pagination'), ($article_total) ? (($page - 1) * $this->config->get('config_limit_admin')) + 1 : 0, ((($page - 1) * $this->config->get('config_limit_admin')) > ($article_total - $this->config->get('config_limit_admin'))) ? $article_total : ((($page - 1) * $this->config->get('config_limit_admin')) + $this->config->get('config_limit_admin')), $article_total, ceil($article_total / $this->config->get('config_limit_admin')));		$data['filter_name'] = $filter_name;		$data['filter_status'] = $filter_status;		$data['sort'] = $sort;		$data['order'] = $order;		$data['header'] = $this->load->controller('common/header');		$data['column_left'] = $this->load->controller('common/column_left');		$data['footer'] = $this->load->controller('common/footer');		$this->response->setOutput($this->load->view('blog/article_list.tpl', $data));	}	protected function getForm() {		$data['heading_title'] = $this->language->get('heading_title');				$data['text_form'] = !isset($this->request->get['article_id']) ? $this->language->get('text_add') : $this->language->get('text_edit');		$data['text_enabled'] = $this->language->get('text_enabled');		$data['text_disabled'] = $this->language->get('text_disabled');		$data['text_none'] = $this->language->get('text_none');		$data['text_yes'] = $this->language->get('text_yes');		$data['text_no'] = $this->language->get('text_no');		$data['text_plus'] = $this->language->get('text_plus');		$data['text_minus'] = $this->language->get('text_minus');		$data['text_default'] = $this->language->get('text_default');		$data['entry_name'] = $this->language->get('entry_name');		$data['entry_image'] = $this->language->get('entry_image');		$data['entry_author'] = $this->language->get('entry_author');		$data['entry_description'] = $this->language->get('entry_description');        $data['entry_category'] = $this->language->get('entry_category');		$data['entry_meta_title'] = $this->language->get('entry_meta_title');		$data['entry_meta_description'] = $this->language->get('entry_meta_description');		$data['entry_meta_keyword'] = $this->language->get('entry_meta_keyword');		$data['entry_keyword'] = $this->language->get('entry_keyword');		$data['entry_intro_text'] = $this->language->get('entry_intro_text');        $data['entry_status'] = $this->language->get('entry_status');		$data['entry_sort_order'] = $this->language->get('entry_sort_order');		$data['entry_store'] = $this->language->get('entry_store');		$data['help_keyword'] = $this->language->get('help_keyword');        $data['help_category'] = $this->language->get('help_keyword');		$data['help_intro_text'] = $this->language->get('help_intro_text');		$data['button_save'] = $this->language->get('button_save');		$data['button_cancel'] = $this->language->get('button_cancel');		$data['button_remove'] = $this->language->get('button_remove');		$data['tab_general'] = $this->language->get('tab_general');		if (isset($this->error['warning'])) {			$data['error_warning'] = $this->error['warning'];		} else {			$data['error_warning'] = '';		}		if (isset($this->error['name'])) {			$data['error_name'] = $this->error['name'];		} else {			$data['error_name'] = array();		}		if (isset($this->error['meta_title'])) {			$data['error_meta_title'] = $this->error['meta_title'];		} else {			$data['error_meta_title'] = array();		}		if (isset($this->error['keyword'])) {			$data['error_keyword'] = $this->error['keyword'];		} else {			$data['error_keyword'] = '';		}				$url = '';		if (isset($this->request->get['filter_name'])) {			$url .= '&filter_name=' . urlencode(html_entity_decode($this->request->get['filter_name'], ENT_QUOTES, 'UTF-8'));		}		if (isset($this->request->get['filter_status'])) {			$url .= '&filter_status=' . $this->request->get['filter_status'];		}		if (isset($this->request->get['sort'])) {			$url .= '&sort=' . $this->request->get['sort'];		}		if (isset($this->request->get['order'])) {			$url .= '&order=' . $this->request->get['order'];		}		if (isset($this->request->get['page'])) {			$url .= '&page=' . $this->request->get['page'];		}		$data['breadcrumbs'] = array();		$data['breadcrumbs'][] = array(			'text' => $this->language->get('text_home'),			'href' => $this->url->link('common/dashboard', 'token=' . $this->session->data['token'], true)		);		$data['breadcrumbs'][] = array(			'text' => $this->language->get('heading_title'),			'href' => $this->url->link('blog/article', 'token=' . $this->session->data['token'] . $url, true)		);		if (!isset($this->request->get['article_id'])) {			$data['action'] = $this->url->link('blog/article/add', 'token=' . $this->session->data['token'] . $url, true);		} else {			$data['action'] = $this->url->link('blog/article/edit', 'token=' . $this->session->data['token'] . '&article_id=' . $this->request->get['article_id'] . $url, true);		}		$data['cancel'] = $this->url->link('blog/article', 'token=' . $this->session->data['token'] . $url, true);		if (isset($this->request->get['article_id']) && ($this->request->server['REQUEST_METHOD'] != 'POST')) {			$article_info = $this->model_blog_article->getArticle($this->request->get['article_id']);		}		$data['token'] = $this->session->data['token'];		$this->load->model('localisation/language');		$data['languages'] = $this->model_localisation_language->getLanguages();		if (isset($this->request->post['article_description'])) {			$data['article_description'] = $this->request->post['article_description'];		} elseif (isset($this->request->get['article_id'])) {			$data['article_description'] = $this->model_blog_article->getArticleDescriptions($this->request->get['article_id']);		} else {			$data['article_description'] = array();		}		if (isset($this->request->post['keyword'])) {			$data['keyword'] = $this->request->post['keyword'];		} elseif (!empty($article_info)) {			$data['keyword'] = $article_info['keyword'];		} else {			$data['keyword'] = '';		}		if (isset($this->request->post['sort_order'])) {			$data['sort_order'] = $this->request->post['sort_order'];		} elseif (!empty($article_info)) {			$data['sort_order'] = $article_info['sort_order'];		} else {			$data['sort_order'] = 1;		}		if (isset($this->request->post['status'])) {			$data['status'] = $this->request->post['status'];		} elseif (!empty($article_info)) {			$data['status'] = $article_info['status'];		} else {			$data['status'] = true;		}				if (isset($this->request->post['image'])) {            $data['image'] = $this->request->post['image'];        } elseif (!empty($article_info)) {			$data['image'] = $article_info['image'];		} else {            $data['image'] = '';        }        $this->load->model('tool/image');        if (isset($this->request->post['image']) && is_file(DIR_IMAGE . $this->request->post['image'])) {            $data['thumb'] = $this->model_tool_image->resize($this->request->post['image'], 100, 100);        } elseif (!empty($article_info) && is_file(DIR_IMAGE . $article_info['image'])) {            $data['thumb'] = $this->model_tool_image->resize($article_info['image'], 100, 100);        } else {            $data['thumb'] = $this->model_tool_image->resize('no_image.png', 100, 100);        }        $data['placeholder'] = $this->model_tool_image->resize('no_image.png', 100, 100);				if (isset($this->request->post['author'])) {			$data['author'] = $this->request->post['author'];		} elseif (!empty($article_info)) {			$data['author'] = $article_info['author'];		} else {			$data['author'] = '';		}		$this->load->model('setting/store');		$data['stores'] = $this->model_setting_store->getStores();		if (isset($this->request->post['article_store'])) {			$data['article_store'] = $this->request->post['article_store'];		} elseif (isset($this->request->get['article_id'])) {			$data['article_store'] = $this->model_blog_article->getArticleStores($this->request->get['article_id']);		} else {			$data['article_store'] = array(0);		}		$data['header'] = $this->load->controller('common/header');		$data['column_left'] = $this->load->controller('common/column_left');		$data['footer'] = $this->load->controller('common/footer');		$this->response->setOutput($this->load->view('blog/article_form.tpl', $data));	}	protected function validateForm() {		if (!$this->user->hasPermission('modify', 'blog/article')) {			$this->error['warning'] = $this->language->get('error_permission');		}		foreach ($this->request->post['article_description'] as $language_id => $value) {			if ((utf8_strlen($value['name']) < 3) || (utf8_strlen($value['name']) > 255)) {				$this->error['name'][$language_id] = $this->language->get('error_name');			}			if ((utf8_strlen($value['meta_title']) < 3) || (utf8_strlen($value['meta_title']) > 255)) {				$this->error['meta_title'][$language_id] = $this->language->get('error_meta_title');			}		}		if (utf8_strlen($this->request->post['keyword']) > 0) {			$this->load->model('catalog/url_alias');			$url_alias_info = $this->model_catalog_url_alias->getUrlAlias($this->request->post['keyword']);			if ($url_alias_info && isset($this->request->get['article_id']) && $url_alias_info['query'] != 'article_id=' . $this->request->get['article_id']) {				$this->error['keyword'] = sprintf($this->language->get('error_keyword'));			}			if ($url_alias_info && !isset($this->request->get['article_id'])) {				$this->error['keyword'] = sprintf($this->language->get('error_keyword'));			}		}		if ($this->error && !isset($this->error['warning'])) {			$this->error['warning'] = $this->language->get('error_warning');		}		return !$this->error;	}	protected function validateDelete() {		if (!$this->user->hasPermission('modify', 'blog/article')) {			$this->error['warning'] = $this->language->get('error_permission');		}		return !$this->error;	}	protected function validateCopy() {		if (!$this->user->hasPermission('modify', 'blog/article')) {			$this->error['warning'] = $this->language->get('error_permission');		}		return !$this->error;	}	public function autocomplete() {		$json = array();		if (isset($this->request->get['filter_name']) ) {			$this->load->model('blog/article');			if (isset($this->request->get['filter_name'])) {				$filter_name = $this->request->get['filter_name'];			} else {				$filter_name = '';			}			if (isset($this->request->get['limit'])) {				$limit = $this->request->get['limit'];			} else {				$limit = 5;			}			$filter_data = array(				'filter_name'  => $filter_name,				'start'        => 0,				'limit'        => $limit			);			$results = $this->model_blog_article->getArticles($filter_data);			foreach ($results as $result) {				$option_data = array();				$json[] = array(					'article_id' => $result['article_id'],					'name'       => strip_tags(html_entity_decode($result['name'], ENT_QUOTES, 'UTF-8'))				);			}		}		$this->response->addHeader('Content-Type: application/json');		$this->response->setOutput(json_encode($json));	}}